# ------------------------------------
#         Expresiones regulares
# ------------------------------------
# # Se usan para validar formatos, extraer informaci√≥n o reemplazar caracteres en cadenas de texto.
# # Python proporciona el m√≥dulo re para trabajar con expresiones regulares.

# # """
# # üõ†Ô∏è Principales funciones del m√≥dulo re
# # 1Ô∏è‚É£ re.search(patron, texto) ‚Üí Busca la primera coincidencia en el texto.

# # texto = "Me gusta programar en Python y tambi√©n en JavaScript"
# # resultado = re.search(r"Python", texto)
# # if resultado:
# #     print("Coincidencia:", resultado.group())  # ‚úÖ "Python"


# # 2Ô∏è‚É£ re.findall(patron, texto) ‚Üí Devuelve todas las coincidencias como una lista.

# # texto = "Python es un lenguaje. Python es muy popular."
# # resultado = re.findall(r"Python", texto)
# # print(resultado)  # ‚úÖ ['Python', 'Python']


# # 3Ô∏è‚É£ re.match(patron, texto) ‚Üí Comprueba si el texto empieza con el patr√≥n.

# # texto = "Python es un lenguaje poderoso"
# # resultado = re.match(r"Python", texto)
# # if resultado:
# #     print("Coincidencia:", resultado.group())  # ‚úÖ "Python"
# # else:
# #     print("No encontrado")

# # resultado = re.match(r"lenguaje", texto)  # ‚ùå No est√° al inicio
# # print(resultado)  # None


# # 4Ô∏è‚É£ re.fullmatch(patron, texto) ‚Üí Comprueba si toda la cadena coincide con el patr√≥n.

# # texto = "Python123"
# # resultado = re.fullmatch(r"[A-Za-z0-9]+", texto)
# # if resultado:
# #     print("Texto v√°lido")  # ‚úÖ "Texto v√°lido"
# # else:
# #     print("Texto inv√°lido")

# # Si ponemos un espacio "Python 123" ya dar√≠a error y tendr√≠amos que a√±adir al patr√≥n \s -> [A-Za-z0-9\s]+

# # 5Ô∏è‚É£ re.sub(patron, reemplazo, texto) ‚Üí Reemplaza coincidencias en el texto.
# # 6Ô∏è‚É£ re.split(patron, texto) ‚Üí Divide la cadena usando el patr√≥n como separador.
# # 7Ô∏è‚É£ re.compile(patron) ‚Üí Compila el patr√≥n para usarlo varias veces de manera eficiente.

import re

texto = "Mi n√∫mero es 612345678 y mi correo Es ejemplo@email.com"
texto_dos = "Mi n√∫mero no es 612345678 y mi correo es ejemplo@email.com"

# re.search
print("\n1Ô∏è‚É£  re.search(patron, texto) ‚Üí Busca la primera coincidencia en el texto.")
# <re.Match object; span=(3, 12), match='n√∫mero es'>
print(re.search("n√∫mero es", texto))  # Encuentra la primera coincidencia

# re.findall
print("\n2Ô∏è‚É£  re.findall(patron, texto) ‚Üí Devuelve todas las coincidencias como una lista.")
# re.I para ignorar may√∫sculas y min√∫sculas
lista = re.findall("es", texto, re.I)
print(lista)  # ['es', 'Es']
print(len(lista))  # 2

# re.match
print("\n3Ô∏è‚É£  re.match(patron, texto) ‚Üí Comprueba si el texto empieza con el patr√≥n.")
# <re.Match object; span=(0, 12), match='Mi n√∫mero es'>
print(re.match("Mi n√∫mero es", texto))
print(re.match("Mi n√∫mero es", texto_dos))  # None
# None porque match busca desde el principio no como search
print(re.match("n√∫mero es", texto))

match = re.match("Mi n√∫mero es", texto)
print(match.group())  # Mi n√∫mero es
inicio, final = match.span()  # (0, 12) rango donde lo encuentra
print(texto[inicio:final])  # Mi n√∫mero es

# re.fullmatch
print("\n4Ô∏è‚É£  re.fullmatch(patron, texto) ‚Üí Comprueba si toda la cadena coincide con el patr√≥n.")
print(re.fullmatch(texto, texto))  # Necesita toda la cadena


# re.sub
print("\n5Ô∏è‚É£  re.sub(patron, reemplazo, texto) ‚Üí Reemplaza coincidencias en el texto.")
# re.I para que detecte el Mi n√∫mero es y lo cambie
texto_cambiado = re.sub(
    "mi n√∫mero es", "Mi n√∫mero podr√≠a ser", texto, flags=re.I)
# Mi n√∫mero podr√≠a ser 612345678 y mi correo Es ejemplo@email.com
print(texto_cambiado)

# Ejemplo cambiando n√∫mero y correo
# patron = "mi (n√∫mero|correo) es"
# def reemplazo(match):
#     if match.group(1).lower() == "n√∫mero":
#         return "Mi n√∫mero podr√≠a ser"
#     else:
#         return "mi correo podr√≠a ser"

# texto_cambiado = re.sub(
#     "mi (n√∫mero|correo) es", reemplazo, texto, flags=re.I)
# # Mi n√∫mero podr√≠a ser 612345678 y mi correo podr√≠a ser ejemplo@email.com
# print(texto_cambiado)


# re.split
print("\n6Ô∏è‚É£  re.split(patron, texto) ‚Üí Divide la cadena usando el patr√≥n como separador.")
# Mi n√∫mero es 612345678 y mi correo Es ejemplo@email.com
# Devuelve: ['Mi n√∫mero es 612345678 ', ' mi correo Es ejemplo@email.com']
print(re.split("y", texto))

